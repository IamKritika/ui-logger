"use strict";angular.module("ui.logger",[]),angular.module("ui.logger").config(["$provide",function(a){a.decorator("$log",["$delegate","logger","loggerLevels","logUtils",function(a,b,c,d){var e={};b.$setLog(a),d.$defaultLogger(a);var f=b.getInstance();return c.forEach(function(a){e[a]=function(){d.isEnabled(f,a)&&f[a].apply(f,arguments)}}),e}])}]),angular.module("ui.logger").service("StackTrace",function(){return window.StackTrace}),angular.module("ui.logger").service("logUtils",["StackTrace","$window","loggerLevels","$injector",function(a,b,c,d){function e(a){i.warn("Error server-side logging failed"),i.log(a.message)}function f(c,f){var g=f.toString(),h=moment().format("LLL");if(f instanceof Error)return a.fromError(f).then(function(a){var d=a.map(function(a){return a.toString()}).join("\n");return{name:c.name,time:h,url:b.location.href,message:g,stackframes:d}})["catch"](e);var i=d.get("$q");return i.resolve({name:c.name,time:h,url:b.location.href,message:g})}function g(a,b){if(a.level){var d=c.indexOf(a.level),e=c.indexOf(b);if(-1!==d&&e>=d)return!0}return!1}function h(a){return a&&(i=a),i}var i;return{getLogData:f,$defaultLogger:h,isEnabled:g}}]),angular.module("ui.logger").constant("loggerLevels",["debug","info","warn","log","error"]),function(){function a(a){return this.level=a,this}function b(a){angular.isFunction(a)&&(this.callback=a)}function c(a){this._disableConsoleLogging=!!a}function d(a){this._defaultName=a}function e(){for(var a=arguments[0],b=1;b<arguments.length;b++){var c=new RegExp("\\{"+(b-1)+"\\}","gm");a=a.replace(c,arguments[b])}return a}function f(b){function c(c){function g(c){if(!c){if(d)return d;c=f._defaultName}for(var e={name:c,level:f.level,setLevel:a},g=0;g<b.length;g++)i(e,b[g]);return c===f._defaultName&&(d=e),e}function h(a){this.$log=a}function i(a,b){a[b]=function(){if(c.isEnabled(this,b)){var a=Array.prototype.slice.call(arguments);a.unshift(this),c.getLogData.apply(null,a).then(function(a){f._disableConsoleLogging||k.$log[b](e(j,a.time,a.name,a.message+"\n"+a.stackframes)),f.callback.call(null,a)})}}}var j="{0}::[{1}]> {2}",k={$setLog:h,getInstance:g};return k}this.level=b[0],this.callback=angular.noop,this._disableConsoleLogging=!1,this._defaultName="default";var d,f=this;this.$get=["logUtils",c]}f.prototype.setLevel=a,f.prototype.setInterceptor=b,f.prototype.disableConsoleLogging=c,f.prototype.setDefaultName=d,angular.module("ui.logger").provider("logger",["loggerLevels",f])}();
//# sourceMappingURL=ui.logger.min.js.map